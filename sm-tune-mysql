#!/usr/bin/bash
# 
# This looks at properties of MySQL and determines
# best values to be set in your configuration file.
# This tuner assumes you are giving 70% of the SM 
# memory to MySQL only.
# Copyright (c) 2015 Joyent Inc., All rights reserved.

usage() {
cat << EOF

Usage: $0 [options]

Options:
    
    -u               Username to access database.  [use portal credentials]
    -p               Password to access database.  [use portal credentials]

EOF
exit 2;
}

while getopts "u:p:" OPTION; do
	case $OPTION in
		u)
			DB_USER=$OPTARG;
			;;
		p)
			DB_PASS=$OPTARG;
			;;
		*)
			usage;
			;;
	esac
done

export LANG=C
PATH="/mysql/bin:@PREFIX@/bin:@PREFIX@/gnu/bin:@PREFIX@/sbin:/usr/bin:/usr/sbin";

[[ ! ${DB_USER} ]] && DB_USER="root";
[[ ! ${DB_PASS} ]] && DB_PASS="$(mdata-get mysql_pw)";

mysql_check() {
	hash mysql &>/dev/null
	[[ $? -eq 1 ]] && echo "* ERROR - mysql was not found in your PATH." && exit 2;

	hash mysqladmin &>/dev/null
	[[ $? -eq 1 ]] && echo "* ERROR - mysqladmin was not found in your PATH." && exit 2;

	[[ ! `pgrep mysqld` ]] && echo "* ERROR - mysql must be running to tune the database." && exit 2;

	mysql -u${DB_USER} -p${DB_PASS} -e "select version();" > /dev/null 2>&1
	[[ $? -eq 1 ]] && echo "* ERROR - Can't connect with username password specified." && exit 2;
}

mysql_get_config() {
	# Find MySQL config file
	BASEDIR=$(mysqladmin -u${DB_USER} -p${DB_PASS} variables | grep basedir | awk '{ print $4 }');
	[[ ${BASEDIR} = "@PREFIX@" ]] && CONFIG="${BASEDIR}/etc/my.cnf"
	[[ ${BASEDIR} = "/mysql" ]] && CONFIG="${BASEDIR}/my.cnf"

	# Die if config is missing
	[[ -z ${CONFIG} ]] && echo "ERROR - ${CONFIG} is not found." && exit 2;

	# Find MySQL datadir
	DATADIR=$(mysqladmin -u${DB_USER} -p${DB_PASS} variables | grep datadir | awk '{ print $4 }');
}

mysql_get_tunables() {
	# Put variables,status into file that we can parse
	VARS_FILE="/tmp/sm_tune_mysql_vars.$$";
	STATUS_FILE="/tmp/sm_tune_mysql_status.$$";
	mysql -u${DB_USER} -p${DB_PASS} -e "show variables" > ${VARS_FILE}
	mysql -u${DB_USER} -p${DB_PASS} -e "show status" > ${STATUS_FILE}

	# Get SM info
	SM_ID=$(zoneadm list -p | awk -F: '{ print $1 }');
	SM_INTIP=$(ifconfig -a | grep -A 1 net1 | awk '/inet/ { print $2 }');
	SM_MEMCAP=$(kstat -p -c zone_caps -n lockedmem_zone_${SM_ID} -s value | awk '{ print $2/1024/1024 }');

	# Find MyISAM/InnoDB table totals
	MYISAM_TOTAL_FILES=$(find ${DATADIR} -type f -name *.MYI);
	INNODB_TOTAL_FILES=$(find ${DATADIR} -type f -name *.ibd -o -name ibdata*);

	# If no MyISAM tables found, set value to default
	if [[ ! ${MYISAM_TOTAL_FILES} ]]; then
		TUNED_KEY_BUFFER_SIZE="256M";
	else
		# Get total of all .MYI files in M
		KEY_BUFFER_SIZE=$(gdu -sc `find ${DATADIR} -type f -name *.MYI` | tail -1 | awk '{ printf("%d", $1 / 1024) }');
	fi

	# If no InnoDB tables found, set value to default
	if [[ ! ${INNODB_TOTAL_FILES} ]]; then
		TUNED_INNODB_BUFFER_POOL_SIZE="256M";
	else
		# Get total of all .ibd files and ibdata files in M
		INNODB_BUFFER_POOL_SIZE=$(gdu -sc `find ${DATADIR} -type f -name *.ibd -o -name ibdata*` | tail -1 | awk '{ printf("%d", $1 / 1024) }');
	fi

	# Get table cache size
	TABLE_CACHE_SIZE=$(find ${DATADIR} -name *.frm | wc -l);

	# Get thread cache size
	THREAD_CACHE_SIZE=$(prstat 1 1 | grep "mysqld/" | awk -F/ '{ print $2 }');

	# Get InnoDB log file size
	TUNED_INNODB_LOG_FILE_SIZE=$(mysql -u${DB_USER} -p${DB_PASS} -sN -e "SELECT @a1 := variable_value AS a1 FROM information_schema.global_status WHERE variable_name = 'innodb_os_log_written' UNION ALL SELECT Sleep(60) UNION ALL SELECT @a2 := variable_value AS a2 FROM information_schema.global_status WHERE variable_name = 'innodb_os_log_written'; SELECT ROUND((@a2-@a1) * 60 / 1024 / 1024 / @@innodb_log_files_in_group) as MB;" | tail -1);

	# Get Query cache
	MYSQL_QUERYCACHEHITS=$(grep "^Qcache_hits" ${STATUS_FILE} | awk '{ print $2 }');
	MYSQL_QUERYCACHEINSERTS=$(grep "^Qcache_inserts" ${STATUS_FILE} | awk '{ print $2 }');
	MYSQL_QUERYCACHENOTCACHED=$(grep "^Qcache_not_cached" ${STATUS_FILE} | awk '{ print $2 }');
}

mysql_tune() {
	# Tune InnoDB and MyISAM

	# Get MyISAM and InnoDB Ratios
	MYISAM_RATIO=$(echo "${KEY_BUFFER_SIZE} / (${KEY_BUFFER_SIZE} + ${INNODB_BUFFER_POOL_SIZE})" | bc -l);
	INNODB_RATIO=$(echo "${INNODB_BUFFER_POOL_SIZE} / (${KEY_BUFFER_SIZE} + ${INNODB_BUFFER_POOL_SIZE})" | bc -l);

	# Set available memory for MySQL to use to 69% of memory cap
	MYSQL_MEMAVAIL=$(echo "${SM_MEMCAP} * .69" | bc -l | xargs printf "%1.0f")
	MYSQL_MEMADDITIONAL="0.05";
	RATIO_REQ_MEM=$(echo "(${INNODB_BUFFER_POOL_SIZE} + ${KEY_BUFFER_SIZE}) / ${MYSQL_MEMAVAIL} + ${MYSQL_MEMADDITIONAL}" | bc -l);

	if [[ ${RATIO_REQ_MEM} < "0.8" ]]; then
		ADJUSTED_USABLE_MEM=$(echo "${MYSQL_MEMAVAIL} * ${RATIO_REQ_MEM}");
	else
		ADJUSTED_USABLE_MEM="${MYSQL_MEMAVAIL}";
	fi

	# Set InnoDB tuned size, round it to nearest 10	
	TUNED_INNODB_BUFFER_POOL_SIZE_RAW=$(echo "${ADJUSTED_USABLE_MEM} * ${INNODB_RATIO}" | bc -l | xargs printf "%1.0f")
	TUNED_INNODB_BUFFER_POOL_SIZE=$(echo "(${TUNED_INNODB_BUFFER_POOL_SIZE_RAW} + 5) / 10 * 10" | bc);
	[[ ${TUNED_INNODB_BUFFER_POOL_SIZE} < "128" ]] && TUNED_INNODB_BUFFER_POOL_SIZE="128";

	# Set MyISAM tuned size, round it to nearest 10
	TUNED_KEY_BUFFER_SIZE_RAW=$(echo "${ADJUSTED_USABLE_MEM} * ${MYISAM_RATIO}" | bc -l | xargs printf "%1.0f")
	TUNED_KEY_BUFFER_SIZE=$(echo "(${TUNED_KEY_BUFFER_SIZE_RAW} + 5) / 10 * 10" | bc);
	[[ ${TUNED_KEY_BUFFER_SIZE} < "128" ]] && TUNED_KEY_BUFFER_SIZE="128";

	# Tune table_cache_size (add 25 to the number of tables)
	TUNED_TABLE_CACHE_SIZE=$(( ${TABLE_CACHE_SIZE} + 25 ));

	# Tune thread_cache_size (add 50 to the active number of threads, set to no less than 128)
	TUNED_THREAD_CACHE_SIZE=$(( ${THREAD_CACHE_SIZE} + 50 ));
	[[ ${TUNED_THREAD_CACHE_SIZE} -lt "128" ]] && TUNED_THREAD_CACHE_SIZE="128";

	# Tune innodb log file size (always set to no less than 128)
	TUNED_INNODB_LOG_FILE_SIZE=$(( ${TUNED_INNODB_LOG_FILE_SIZE} + 50 ));
	TUNED_INNODB_LOG_FILE_SIZE=$(echo "(${TUNED_INNODB_LOG_FILE_SIZE} + 5) / 10 * 10" | bc );
	[[ ${TUNED_INNODB_LOG_FILE_SIZE} -lt "100" ]] && TUNED_INNODB_LOG_FILE_SIZE="128";

	# Tune query cache settings
	MYSQL_QUERYCACHEHITRATIO=$(echo "scale=2; ${MYSQL_QUERYCACHEHITS} / (${MYSQL_QUERYCACHEHITS} + ${MYSQL_QUERYCACHEINSERTS} + ${MYSQL_QUERYCACHENOTCACHED})" | bc | tail -1);
	if [[ ${MYSQL_QUERYCACHEHITRATIO} > ".45" ]] && [[ ${MYSQL_QUERYCACHEHITRATIO} != "0" ]]; then
		MYSQL_QUERYCACHESIZE="query_cache_size            = 16M";
		MYSQL_QUERYCACHETYPE="query_cache_type            = 1";
	else
		MYSQL_QUERYCACHESIZE="#query_cache_size           = 16M";
		MYSQL_QUERYCACHETYPE="#query_cache_type           = 0";
	fi

	# Tune thread_concurrency (only works Solaris 9 and earlier, but set it anyway to number of CPUS * 2)
	TUNED_THREAD_CONCURRENCY=$(kstat -p unix:0:system_misc:ncpus | awk '{ print $2 * 2 }');

	# Tune max_connections (set to the number of tuned thread cache size * 4)
	TUNED_MAX_CONNECTIONS=$(echo "${TUNED_THREAD_CACHE_SIZE} * 4" | bc -l | xargs printf "%1.0f");
}

mysql_get_settings() {
	# Client and Server settings
	MYSQL_PORT=$(grep "^port" ${VARS_FILE} | awk '{ print $2 }') && MYSQL_PORT=${MYSQL_PORT:-3306};
	MYSQL_SOCKET=$(grep "\.sock" ${VARS_FILE} | awk '{ print $2 }') && MYSQL_SOCKET=${MYSQL_SOCKET:-/tmp/mysql.sock};
	MYSQL_CHRSETCLIENT=$(grep character_set_client ${VARS_FILE} | awk '{ print $2 }') && MYSQL_CHRSETCLIENT=${MYSQL_CHRSETCLIENT:-utf8};
	MYSQL_USER=$(ps -aeo user,comm | grep mysqld | head -1 | awk '{ print $1 }') && MYSQL_USER=${MYSQL_USER:-mysql};
	MYSQL_BASEDIR=$(grep basedir ${VARS_FILE} | awk '{ print $2 }') && MYSQL_BASEDIR=${MYSQL_BASEDIR:-/mysql};
	MYSQL_DATADIR=$(grep datadir ${VARS_FILE} | awk '{ print $2 }') && MYSQL_DATADIR=${MYSQL_DATADIR:-/databases};
	MYSQL_BINDADDRESS=$(mysqld --verbose --help 2>/dev/null | grep -i bind-address | tail -1 | awk '{ print $2 }');
	if [[ ! $(echo ${MYSQL_BINDADDRESS} | egrep "^((([2][5][0-5]|([2][0-4]|[1][0-9]|[0-9])?[0-9])\.){3})([2][5][0-5]|([2][0-4]|[1][0-9]|[0-9])?[0-9])$") ]]; then
		MYSQL_BINDADDRESS="#bind-address                = ${SM_INTIP}";
	else
		MYSQL_BINDADDRESS="bind-address                 = ${MYSQL_BINDADDRESS}";
	fi

	MYSQL_STORAGEENGINE=$(grep default_storage_engine ${VARS_FILE} | awk '{ print $2 }') && MYSQL_STORAGEENGINE=${MYSQL_STORAGEENGINE:-innodb};
	MYSQL_CHRSETSERVER=$(grep character_set_server ${VARS_FILE} | awk '{ print $2 }') && MYSQL_CHRSETSERVER=${MYSQL_CHRSETSERVER:-utf8};
	MYSQL_SKIPNAMERESOLVE=$(grep skip_name_resolve ${VARS_FILE} | awk '{ print $2 }');
	[[ ${MYSQL_SKIPNAMERESOLVE} = "ON" ]] && MYSQL_SKIPNAMERESOLVE="skip_name_resolv" || MYSQL_SKIPNAMERESOLVE="#skip_name_resolv";
	MYSQL_SERVERID=$(grep server_id ${VARS_FILE} | awk '{ print $2 }') && MYSQL_SERVERID=${MYSQL_SERVERID:-1};

	# InnoDB settings	
	MYSQL_DATAFILEPATH=$(grep innodb_data_file_path ${VARS_FILE} | awk '{ print $2 }') && MYSQL_DATAFILEPATH=${MYSQL_DATAFILEPATH:-ibdata1:100M:autoextend};
	MYSQL_INNODBFILEPERTABLE=$(grep innodb_file_per_table ${VARS_FILE} | awk '{ print $2 }'); 
	[[ ${MYSQL_INNODBFILEPERTABLE} = "OFF" ]] && MYSQL_INNODBFILEPERTABLE="#innodb_file_per_table" || MYSQL_INNODBFILEPERTABLE="innodb_file_per_table";
	
	# Slow query log settings
	MYSQL_LONGQUERYTIME=$(grep long_query_time ${VARS_FILE} | awk '{ print $2 }');
	MYSQL_SLOWQUERYLOGFILE=$(grep slow_query_log_file ${VARS_FILE} | awk '{ print $2 }');
	MYSQL_SLOWQUERYLOG=$(grep "^slow_query_log" ${VARS_FILE} | head -1 | awk '{ print $2 }');
	[[ ${MYSQL_SLOWQUERYLOG} = "OFF" ]] && MYSQL_SLOWQUERYLOG="0" || MYSQL_SLOWQUERYLOG="1";
	MYSQL_LOGSLOWFILTER=$(grep "^log_slow_filter" ${VARS_FILE} | awk '{ print $2 }') && MYSQL_LOGSLOWFILTER=${MYSQL_LOGSLOWFILTER:-full_scan,tmp_table_on_disk,filesort_on_disk};
	MYSQL_LOGSLOWVERBOSITY=$(grep "log_slow_verbosity" ${VARS_FILE} | awk '{ print $2 }') && MYSQL_LOGSLOWVERBOSITY=${MYSQL_LOGSLOWVERBOSITY:-full};


	# Binlog settings
	MYSQL_BINLOGFORMAT=$(grep binlog_format ${VARS_FILE} | awk '{ print $2 }') && MYSQL_BINLOGFORMAT=${MYSQL_BINLOGFORMAT:-mixed};
	MYSQL_LOGBININDEXTMP=$(mysqld --verbose --help 2> /dev/null | grep "^log-bin" | head -1 | awk '{ print $2 ".log" }');
	MYSQL_LOGBINSWITCH=$(grep "^log_bin" ${VARS_FILE} | head -1 | awk '{ print $2 }');
	if [[ ${MYSQL_LOGBINSWITCH} = "ON" ]]; then
		MYSQL_LOGBIN="log-bin                 = $(mysqld --verbose --help 2> /dev/null | grep "^log-bin" | head -1 | awk '{ print $2 ".log" }')" && MYSQL_LOGBIN=${MYSQL_LOGBIN:-log-bin=/var/log/mysql/bin.log};
		MYSQL_LOGBININDEX="#log-bin-index          = ${MYSQL_LOGBININDEXTMP%/*}/log-bin.index";
	else
		MYSQL_LOGBIN="#log-bin                = /var/log/mysql/bin.log";
		MYSQL_LOGBININDEX="#log-bin-index          = /var/log/mysql/log-bin.index";
	fi

	# Error log, Report Host, Expire Log Days, Slave Skip Errors, Handlersocket
	MYSQL_ERRORLOG=$(grep "^log_error" ${VARS_FILE} | head -1 | awk '{ print $2 }') && MYSQL_ERRORLOG=${MYSQL_ERRORLOG:-/var/log/mysql/error.log};

	# Other settings
	MYSQL_REPORTHOST=$(grep "^report_host" ${VARS_FILE} | head -1 | awk '{ print $2 }');
	[[ ! ${MYSQL_REPORTHOST} ]] && MYSQL_REPORTHOST="#report-host            = ${SM_INTIP}" || MYSQL_REPORTHOST="report-host             = ${MYSQL_REPORTHOST}";

	MYSQL_EXPIRELOGDAYS=$(grep "^expire_logs_days" ${VARS_FILE} | head -1 | awk '{ print $2 }');
	[[ ${MYSQL_EXPIRELOGDAYS} -gt "0" ]] && MYSQL_EXPIRELOGDAYS="expire_log_days         = ${MYSQL_EXPIRELOGDAYS}" || MYSQL_EXPIRELOGDAYS="#expire_log_days        = 7";

	MYSQL_SLAVESKIPERRORS=$(grep "^slave_skip_errors" ${VARS_FILE} | head -1 | awk '{ print $2 }');
	[[ ${MYSQL_SLAVESKIPERRORS} = "OFF" ]] && MYSQL_SLAVESKIPERRORS="#slave_skip_errors      = 1062" || MYSQL_SLAVESKIPERRORS="slave_skip_errors       = ${MYSQL_SLAVESKIPERRORS}"

	MYSQL_PLUGINDIR=$(grep "^plugin_dir" ${VARS_FILE} | head -1 | awk '{ print $2 }');
	MYSQL_HANDLERSOCKETSWITCH=$(ls -al ${MYSQL_PLUGINDIR} | grep "handlersocket");
	if [[ ${MYSQL_HANDLERSOCKETSWITCH} ]]; then
		MYSQL_HANDLERSOCKET="\
# Handlersocket settings
# See: https://github.com/ahiguti/HandlerSocket-Plugin-for-MySQL
#
# The port number to bind to (for read requests)
#loose_handlersocket_port        = 9998
# The port number to bind to (for write requests)
#loose_handlersocket_port_wr     = 9999
# The number of worker threads (for read requests)
#loose_handlersocket_threads     = 16
# The number of worker threads (for write requests)
#loose_handlersocket_threads_wr  = 1
# To allow handlersocket accept many concurrent
# connections, make open_files_limit as large as
# possible.
#open_files_limit                = 65535";
	fi
}

mysql_buildconfig_regular() {
	# Insert config into new file
	cat > ${CONFIG}.tuned <<EOF
# This configuration file was generated by sm-tune-mysql.
#
# MySQL client settings
[client]
#password                    = your_password
port                         = ${MYSQL_PORT}
socket                       = ${MYSQL_SOCKET}
default-character-set        = ${MYSQL_CHRSETCLIENT}

# MySQL server settings
[mysqld]
user                         = ${MYSQL_USER}
port                         = ${MYSQL_PORT}
basedir                      = ${MYSQL_BASEDIR}
datadir                      = ${MYSQL_DATADIR}
socket                       = ${MYSQL_SOCKET}
${MYSQL_BINDADDRESS}
default-storage-engine       = ${MYSQL_STORAGEENGINE}
character-set-server         = ${MYSQL_CHRSETSERVER}
skip-external-locking
log_warnings
${MYSQL_SKIPNAMERESOLVE}

server-id                    = ${MYSQL_SERVERID} 

# MyISAM settings
key_buffer_size              = ${TUNED_KEY_BUFFER_SIZE}M
sort_buffer_size             = 1M
read_buffer_size             = 1M
read_rnd_buffer_size         = 4M
myisam_sort_buffer_size      = 64M

# InnoDB settings
innodb_data_home_dir            = ${MYSQL_DATADIR}
innodb_log_group_home_dir       = ${MYSQL_DATADIR}
innodb_data_file_path           = ${MYSQL_DATAFILEPATH}
innodb_buffer_pool_size         = ${TUNED_INNODB_BUFFER_POOL_SIZE}M
innodb_additional_mem_pool_size = 20M
innodb_log_file_size            = ${TUNED_INNODB_LOG_FILE_SIZE}M
innodb_log_buffer_size          = 8M
innodb_flush_log_at_trx_commit  = 2
innodb_lock_wait_timeout        = 50
${MYSQL_INNODBFILEPERTABLE}
innodb_doublewrite              = 0
innodb_io_capacity              = 1500
innodb_read_io_threads          = 8
innodb_write_io_threads         = 8

# Slow query log settings
slow_query_log              = ${MYSQL_SLOWQUERYLOG}
slow_query_log_file         = ${MYSQL_SLOWQUERYLOGFILE}
long_query_time             = ${MYSQL_LONGQUERYTIME}

# Query cache settings
${MYSQL_QUERYCACHETYPE}
${MYSQL_QUERYCACHESIZE}
#query_cache_strip_comments

# Other MySQL settings
table_cache                 = ${TUNED_TABLE_CACHE_SIZE}
thread_cache_size           = ${TUNED_THREAD_CACHE_SIZE}
back_log                    = 128
thread_concurrency          = ${TUNED_THREAD_CONCURRENCY}
tmpdir                      = /tmp
max_connections             = ${TUNED_MAX_CONNECTIONS}
max_allowed_packet          = 24M
max_join_size               = 4294967295
net_buffer_length           = 2K
thread_stack                = 128K
tmp_table_size              = 64M
max_heap_table_size         = 64M

# Replication settings (master to slave)
# This is not enabled by default.  There are more steps
# to this besides uncommenting the lines below.
# See: http://wiki.joyent.com/display/jpc2/Replication
#
binlog_format           = ${MYSQL_BINLOGFORMAT}
${MYSQL_LOGBIN}
${MYSQL_LOGBININDEX}
log-error               = ${MYSQL_ERRORLOG}
${MYSQL_REPORTHOST}
#relay_log_purge        = 1
${MYSQL_EXPIRELOGDAYS}
${MYSQL_SLAVESKIPERRORS}
#binlog-ignore-db       = mysql

${MYSQL_HANDLERSOCKET}

[mysqldump]
quick
max_allowed_packet      = 16M

[mysql]
no-auto-rehash
# Remove the next comment character if you are not familiar with SQL
#safe-updates

[myisamchk]
key_buffer_size         = 128M
sort_buffer_size        = 128M
read_buffer             = 2M
write_buffer            = 2M

[mysqlhotcopy]
interactive-timeout
EOF

}

mysql_buildconfig_percona() {
	# Insert config into new file
	cat > ${CONFIG}.tuned <<EOF
# This configuration file was generated by sm-tune-mysql.
#
# MySQL client settings
[client]
#password                    = your_password
port                         = ${MYSQL_PORT}
socket                       = ${MYSQL_SOCKET}
default-character-set        = ${MYSQL_CHRSETCLIENT}

# MySQL server settings
[mysqld]
user                         = ${MYSQL_USER}
port                         = ${MYSQL_PORT}
basedir                      = ${MYSQL_BASEDIR}
datadir                      = ${MYSQL_DATADIR}
socket                       = ${MYSQL_SOCKET}
${MYSQL_BINDADDRESS}
default-storage-engine       = ${MYSQL_STORAGEENGINE}
character-set-server         = ${MYSQL_CHRSETSERVER}
skip-external-locking
log_warnings
${MYSQL_SKIPNAMERESOLVE}

server-id                    = ${MYSQL_SERVERID} 

# MyISAM settings
key_buffer_size              = ${TUNED_KEY_BUFFER_SIZE}M
sort_buffer_size             = 1M
read_buffer_size             = 1M
read_rnd_buffer_size         = 4M
myisam_sort_buffer_size      = 64M

# InnoDB settings
innodb_data_home_dir            = ${MYSQL_DATADIR}
innodb_log_group_home_dir       = ${MYSQL_DATADIR}
innodb_data_file_path           = ${MYSQL_DATAFILEPATH}
innodb_buffer_pool_size         = ${TUNED_INNODB_BUFFER_POOL_SIZE}M
innodb_additional_mem_pool_size = 20M
innodb_log_file_size            = ${TUNED_INNODB_LOG_FILE_SIZE}M
innodb_log_buffer_size          = 8M
innodb_flush_log_at_trx_commit  = 2
innodb_lock_wait_timeout        = 50
${MYSQL_INNODBFILEPERTABLE}
innodb_doublewrite              = 0
innodb_io_capacity              = 1500
innodb_read_io_threads          = 8
innodb_write_io_threads         = 8
innodb_buffer_pool_restore_at_startup = 500

# Slow query log settings
# For 'log_slow_filter' we can specify:
# qc_miss - The query was not found in the query cache
# full_scan - The query performed a full table scan
# full_join - The query performed a full join (a join without indexes)
# tmp_table - The query created an implicit internal temporary table
# tmp_table_on_disk - The query's temporary table was stored on disk
# filesort - The query used a filesort
# filesort_on_disk - The filesort was performed on disk
#
#use_global_long_query_time = 1
slow_query_log              = ${MYSQL_SLOWQUERYLOG}
slow_query_log_file         = ${MYSQL_SLOWQUERYLOGFILE}
long_query_time             = ${MYSQL_LONGQUERYTIME}
log_slow_filter             = "${MYSQL_LOGSLOWFILTER}"
log_slow_verbosity          = "${MYSQL_LOGSLOWVERBOSITY}"

# Query cache settings
${MYSQL_QUERYCACHETYPE}
${MYSQL_QUERYCACHESIZE}
#query_cache_strip_comments

# Other MySQL settings
table_cache                 = ${TUNED_TABLE_CACHE_SIZE}
thread_cache_size           = ${TUNED_THREAD_CACHE_SIZE}
back_log                    = 128
thread_concurrency          = ${TUNED_THREAD_CONCURRENCY}
tmpdir                      = /tmp
max_connections             = ${TUNED_MAX_CONNECTIONS}
max_allowed_packet          = 24M
max_join_size               = 4294967295
net_buffer_length           = 2K
thread_stack                = 128K
tmp_table_size              = 64M
max_heap_table_size         = 64M

# Replication settings (master to slave)
# This is not enabled by default.  There are more steps
# to this besides uncommenting the lines below.
# See: http://wiki.joyent.com/display/jpc2/Replication
#
binlog_format           = ${MYSQL_BINLOGFORMAT}
${MYSQL_LOGBIN}
${MYSQL_LOGBININDEX}
log-error               = ${MYSQL_ERRORLOG}
${MYSQL_REPORTHOST}
#relay_log_purge        = 1
${MYSQL_EXPIRELOGDAYS}
${MYSQL_SLAVESKIPERRORS}
#binlog-ignore-db       = mysql

${MYSQL_HANDLERSOCKET}

[mysqldump]
quick
max_allowed_packet      = 16M

[mysql]
no-auto-rehash
# Remove the next comment character if you are not familiar with SQL
#safe-updates

[myisamchk]
key_buffer_size         = 128M
sort_buffer_size        = 128M
read_buffer             = 2M
write_buffer            = 2M

[mysqlhotcopy]
interactive-timeout
EOF

}

# First check mysql is running and we can find configuration file
mysql_check;
mysql_get_config;

# If it gets this far, tune it
echo "* Tuning MySQL, this can take up to 60 seconds..";
mysql_get_tunables;
mysql_tune;

# Get current settings, build config (MySQL or Percona)
mysql_get_settings;
[[ $(mysql -uroot -p`mdata-get mysql_pw` -e "show engines;" | grep -i XtraDB) ]] && mysql_buildconfig_percona || mysql_buildconfig_regular;

# Clean up
rm ${VARS_FILE};
rm ${STATUS_FILE};

# All done
cat << EOF

Your tuned configuration is at ${CONFIG}.tuned

There is more to just copying this file over your old one and
restarting.  Review the configuration file first to make any
necessary changes, and because 'innodb_log_file_size' has likely
been modified you need to remove the old log files first before
starting.  If you don't do this properly then MySQL won't start.

EOF
